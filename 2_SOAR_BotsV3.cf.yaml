AWSTemplateFormatVersion: 2010-09-09
Resources:
  PhantomARecord:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Comment: DNS A record for the Phantom instance
      HostedZoneName: !Join 
        - ''
        - - !Ref HostedZone
          - .
      Name: !Join 
        - ''
        - - phantom-
          - !Ref EventID
          - .
          - !Ref HostedZone
          - .
      ResourceRecords:
        - !GetAtt 
          - SplunkPhantom
          - PublicIp
      TTL: '60'
      Type: A
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f37749a1-d29e-4de3-aa7c-520f7e1507c1
  CoreARecord:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Comment: DNS A record for the Core instance
      HostedZoneName: !Join 
        - ''
        - - !Ref HostedZone
          - .
      Name: !Join 
        - ''
        - - splunk-
          - !Ref EventID
          - .
          - !Ref HostedZone
          - .
      ResourceRecords:
        - !GetAtt 
          - SplunkCore
          - PublicIp
      TTL: '60'
      Type: A
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.30.0.0/16
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      VpcId: !Ref VPC
      CidrBlock: 10.30.0.0/24
  subnet0RTA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  SplunkCore:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      InstanceType: !Ref CoreInstanceType
      ImageId:
        'Fn::Transform':
          Name: getlatestami
          Parameters:
            Name: !Join 
              - ''
              - - splunk_AMI_
                - !Ref SplunkVersion
                - .*
            Architecture: x86_64
            Owner: '679593333241'
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - GroupSet:
            - !Ref CorePhantomSG
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref PublicSubnet
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              set -x
            - |
              exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1
            - |
              echo BEGIN
            - |
              date '+%Y-%m-%d %H:%M:%S'
            - >
              instanceid=$(curl
              http://169.254.169.254/latest/meta-data/instance-id)
            - |
              echo $instanceid > /tmp/test.txt
            - |
              cd /tmp
            - >
              wget
              "https://webaccessible-jkuepker.s3.us-east-1.amazonaws.com/splunk-soar-botsv3.sh"
            - |
              chmod +x /tmp/splunk-soar-botsv3.sh
            - /tmp/splunk-soar-botsv3.sh &
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 62475ba4-1434-44a3-a289-7a41dc778788
    DependsOn:
      - PublicRoute
  CorePhantomSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: 'Allow access from HTTP, REST, HEC, and SSH traffic'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8000'
          ToPort: '8000'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8089'
          ToPort: '8089'
          CidrIp: 10.30.0.0/24
        - IpProtocol: tcp
          FromPort: '8088'
          ToPort: '8088'
          CidrIp: 10.30.0.0/24
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d7c8abaf-0ae1-463d-b733-96e8d876e526
  CorePhantomIG:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: faef2b3e-8e2c-4e1d-ac33-2f2392075b9c
  VPCAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref CorePhantomIG
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 768d4d7a-7397-43f9-b716-6f7402cd88c2
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c24f5bc9-e419-4e30-bb7f-e92f1a2f96f7
    DependsOn:
      - PublicSubnet
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref CorePhantomIG
    DependsOn:
      - CorePhantomIG
      - VPC
  SplunkPhantom:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      InstanceType: !Ref PhantomInstanceType
      ImageId:
        'Fn::Transform':
          Name: getlatestami
          Parameters:
            Name: !Join 
              - ''
              - - Splunk?Phantom?
                - !Ref PhantomVersion
                - '*'
            Architecture: x86_64
            Owner: '679593333241'
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - GroupSet:
            - !Ref CorePhantomSG
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref PublicSubnet
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              set -x
            - |
              exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1
            - |
              echo BEGIN
            - |
              date '+%Y-%m-%d %H:%M:%S'
            - 'echo '
            - !GetAtt 
              - SplunkCore
              - PrivateIp
            - |2
               > /tmp/test.txt
            - |
              mkdir ~/.aws/
            - 'printf "[default]\naws_access_key_id='
            - !Ref MyAccessKey
            - \naws_secret_access_key=
            - !GetAtt 
              - MyAccessKey
              - SecretAccessKey
            - |
              \n" > ~/.aws/credentials
            - |
              printf "[default]\nregion=us-east-1\noutput=json" > ~/.aws/config
            - |
              mkdir /home/centos/.aws/
            - |
              cp ~/.aws/* /home/centos/.aws/
            - |
              chown -R centos:centos /home/centos/.aws/
            - echo "
            - !Ref MySecret
            - |
              " > /tmp/creds2.txt
            - echo VT_KEY=\""
            - !If 
              - HasVtKey
              - !Ref VirusTotalKey
              - !Ref 'AWS::NoValue'
            - |
              "\" >> /tmp/env.txt
            - echo INAME=\""
            - !Ref PhantomInstanceName
            - |
              "\" >> /tmp/env.txt
            - >
              curl
              https://webaccessible-jkuepker.s3.amazonaws.com/phantom-config.sh
              -o /tmp/phantom-config.sh
            - |
              chmod +x /tmp/phantom-config.sh
            - /tmp/phantom-config.sh &
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          ascending:
            - config1
            - config2
        config1:
          files:
            /home/centos/corePrivateIp.txt:
              content: !GetAtt 
                - SplunkCore
                - PrivateIp
              mode: '000644'
              owner: phantom
        config2:
          commands:
            command: cat /tmp/corePrivateIp.txt > /tmp/second.txt
            ignoreErrors: 'true'
    DependsOn:
      - PublicRoute
  MySecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: CorePhantomSecretForCli
      Description: This secret has a dynamically generated secret password.
      GenerateSecretString:
        SecretStringTemplate: '{"username":"cli-user"}'
        GenerateStringKey: password
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Name
          Value: CorePhantom
  MyAccessKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: CorePhantomUser
    DependsOn:
      - CorePhantomInitUser
  CorePhantomInitUserGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: CorePhantomUserGroup
  CorePhantomInitUser:
    Type: 'AWS::IAM::User'
    Properties:
      Groups:
        - CorePhantomUserGroup
      UserName: CorePhantomUser
    DependsOn:
      - CorePhantomInitUserGroup
  CorePhantomInitPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: CorePhantomUsers
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:Describe*'
              - 'cloudformation:List*'
              - 'cloudformation:Get*'
              - 'ec2:Describe*'
              - 'ec2:GetConsole*'
            Resource: '*'
      Groups:
        - !Ref CorePhantomInitUserGroup
    DependsOn:
      - CorePhantomInitUserGroup
Parameters:
  SplunkVersion:
    Description: Which Splunk Major Version would you like to use?
    Type: Number
    MaxValue: 8
    Default: 8
  PhantomVersion:
    Description: Which Phantom Major Version would you like to use?
    Type: String
    Default: 4.8
  PhantomInstanceName:
    Description: Name of your Phantom Instance in the Title Bar
    Type: String
    Default: Splunk SOAR
  EventID:
    AllowedPattern: '([a-zA-Z0-9]{1,6})'
    ConstraintDescription: Must be lowercase string between one and six characters in length.
    Description: The workshop EventID(aka Short Name)
    Type: String
  HostedZone:
    Default: spl.rocks
    Description: DNS Domain.
    Type: String
  AvailabilityZone:
    Description: Availability Zone
    Type: 'AWS::EC2::AvailabilityZone::Name'
    ConstraintDescription: must be a valid Splunk Core EC2 instance type.
  CoreInstanceType:
    Description: Splunk Core Instance Types
    Type: String
    Default: c5.2xlarge
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - cr1.8xlarge
      - x1.16xlarge
      - x1.32xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - g2.2xlarge
      - g2.8xlarge
      - hs1.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
    ConstraintDescription: must be a valid Splunk Core EC2 instance type.
  PhantomInstanceType:
    Description: Splunk Core/Phantom Instance Types
    Type: String
    Default: m5.large
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - m5ad.large
      - m5ad.xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5ad.12xlarge
      - m5ad.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - m5d.16xlarge
      - m5d.24xlarge
      - m5d.metal
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: must be a valid Splunk Phantom EC2 instance type.
  KeyName:
    Description: Name of an EC2 KeyPair to enable SSH access to the instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: ' The IP address range that can be used to access the web server using SSH.'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  VirusTotalKey:
    Type: String
    Description: VirusTotal Key for auto-configuration
Conditions:
  HasVtKey: !Not 
    - !Equals 
      - ''
      - !Ref VirusTotalKey
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: HVM64
    m1.medium:
      Arch: HVM64
    m1.large:
      Arch: HVM64
    m1.xlarge:
      Arch: HVM64
    m2.xlarge:
      Arch: HVM64
    m2.2xlarge:
      Arch: HVM64
    m2.4xlarge:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: HVM64
    c1.xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
Outputs:
  SplunkCoreURL:
    Value: !Join 
      - ''
      - - splunk-
        - !Ref EventID
        - .
        - !Ref HostedZone
        - ':8000'
    Description: Newly created Splunk Core Private IP
  SplunkCorePrivateIP:
    Value: !GetAtt 
      - SplunkCore
      - PrivateIp
    Description: Newly created Splunk Core Private IP
  SplunkPhantomURL:
    Value: !Join 
      - ''
      - - phantom-
        - !Ref EventID
        - .
        - !Ref HostedZone
    Description: Newly created Splunk Phantom URL
  SplunkPhantomPrivateIP:
    Value: !GetAtt 
      - SplunkPhantom
      - PrivateIp
    Description: Newly created Splunk Phantom Private IP
  SplunkPhantomID:
    Value: !Ref SplunkPhantom
    Description: Newly created Splunk Phantom Instance Id
  SplunkCoreID:
    Value: !Ref SplunkCore
    Description: Newly created Splunk Core Instance Id